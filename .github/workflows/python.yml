name: PythonCI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'kytan-py/**'
      - '.github/workflows/python.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'kytan-py/**'
      - '.github/workflows/python.yml'
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to test (leave empty for all versions)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
      skip_tests:
        description: 'Skip tests and only build package'
        required: false
        default: false
        type: boolean

jobs:
  test:
    name: Test Python Package
    runs-on: ${{ matrix.os }}
    if: ${{ !inputs.skip_tests }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ${{ github.event.inputs.python_version && fromJSON(format('["{0}"]', github.event.inputs.python_version)) || fromJSON('["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]') }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('kytan-py/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: kytan-py
      run: |
        python -m pip install --upgrade pip
        python -m pip install build pytest pytest-cov black flake8 mypy
        python -m pip install -e .[dev]
    
    - name: Check code formatting with black
      working-directory: kytan-py
      run: black --check --diff .
    
    - name: Lint with flake8
      working-directory: kytan-py
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type check with mypy
      working-directory: kytan-py
      run: mypy kytan/ --ignore-missing-imports
    
    - name: Test with pytest
      working-directory: kytan-py
      run: |
        pytest --cov=kytan --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./kytan-py/coverage.xml
        flags: python
        name: codecov-python

  build:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs: test
    if: ${{ !failure() }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Build package
      working-directory: kytan-py
      run: python -m build
    
    - name: Check package
      working-directory: kytan-py
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package
        path: kytan-py/dist/

  test-installation:
    name: Test Package Installation
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package
        path: kytan-py/dist/
    
    - name: Install package from wheel
      run: |
        python -m pip install --upgrade pip
        python -m pip install kytan-py/dist/*.whl
    
    - name: Test installation
      working-directory: kytan-py
      run: python test_installation.py